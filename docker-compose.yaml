version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka-service:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-service:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  main-db:
    image: 'postgres:14.3-alpine'
    container_name: main-api-db
    restart: on-failure
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_TITLE}

  book-tracker-service:
    restart: on-failure
    ports:
      - ${TRACKER_LOCAL_PORT}:${TRACKER_DOCKER_PORT}
    container_name: book-tracker
    environment:
      SPRING_PROFILES_ACTIVE: prod
    build:
      context: /book-tracker-service
      dockerfile: Dockerfile
    depends_on:
      - kafka-service
      - main-db

  authentication-service:
    restart: on-failure
    ports:
      - ${AUTH_LOCAL_PORT}:${AUTH_DOCKER_PORT}
    container_name: auth-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
    build:
      context: /authentication-service
      dockerfile: Dockerfile
    depends_on:
      - main-db

  book-storage-service:
    restart: on-failure
    ports:
      - ${STORAGE_LOCAL_PORT}:${STORAGE_DOCKER_PORT}
    container_name: book-storage
    environment:
      SPRING_PROFILES_ACTIVE: prod
    build:
      context: /book-storage-service
      dockerfile: Dockerfile
    depends_on:
      - book-tracker-service
      - authentication-service